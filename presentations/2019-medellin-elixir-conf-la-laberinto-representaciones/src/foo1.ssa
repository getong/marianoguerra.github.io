module foo1.
exports [{f1,2},{f2,2},{module_info,0},{module_info,1}].
attributes [].

%% foo1.erl:8
%% Counter = 4
function foo1:f1(_0, _1) {
0:
  %% foo1.erl:8
  @ssa_ret:3 = call local literal f2/2, _1, _0
  ret @ssa_ret:3

%% Unreachable blocks

1:
  @ssa_ret = call remote (literal erlang):(literal error)/1, literal badarg
  ret @ssa_ret
}

%% foo1.erl:9
%% Counter = 6
function foo1:f2(_0, _1) {
0:
  %% foo1.erl:9
  _2 = bif:'*' _1, literal 2
  @ssa_bool = succeeded _2
  br @ssa_bool, label 3, label 1

3:
  %% foo1.erl:9
  _3 = bif:'+' _0, _2
  @ssa_bool:4 = succeeded _3
  br @ssa_bool:4, label 5, label 1

5:
  ret _3

1:
  @ssa_ret = call remote (literal erlang):(literal error)/1, literal badarg
  ret @ssa_ret
}

%% Counter = 4
function foo1:module_info() {
0:
  @ssa_ret:3 = call remote (literal erlang):(literal get_module_info)/1, literal foo1
  ret @ssa_ret:3

%% Unreachable blocks

1:
  @ssa_ret = call remote (literal erlang):(literal error)/1, literal badarg
  ret @ssa_ret
}

%% Counter = 4
function foo1:module_info(_0) {
0:
  @ssa_ret:3 = call remote (literal erlang):(literal get_module_info)/2, literal foo1, _0
  ret @ssa_ret:3

%% Unreachable blocks

1:
  @ssa_ret = call remote (literal erlang):(literal error)/1, literal badarg
  ret @ssa_ret
}
